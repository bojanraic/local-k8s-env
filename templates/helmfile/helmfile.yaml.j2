repositories:
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: bjw-s-labs
    url: https://bjw-s-labs.github.io/helm-charts/
  - name: jetstack
    url: https://charts.jetstack.io

helmDefaults:
  createNamespace: true
  wait: true
  atomic: true
  timeout: 900

releases:
  # cert-manager
  - name: cert-manager
    chart: jetstack/cert-manager
    namespace: cert-manager
    version: {{ cert_manager_version }}
    values:
      - crds:
          enabled: true
        global:
          leaderElection:
            namespace: cert-manager
        prometheus:
          enabled: false
        webhook:
          timeoutSeconds: 30

  # Ingress NGINX Controller
  - name: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    namespace: ingress-nginx
    version: {{ nginx_ingress_version }}
    needs:
      - cert-manager/cert-manager
    values:
      - controller:
          progressDeadlineSeconds: 300
          hostPort:
            enabled: true
          service:
            type: NodePort
            annotations: {}
          nodeSelector:
            ingress-ready: "true"
          tolerations:
            - key: node-role.kubernetes.io/master
              operator: Equal
              effect: NoSchedule
            - key: node-role.kubernetes.io/control-plane
              operator: Equal
              effect: NoSchedule
          publishService:
            enabled: false
          admissionWebhooks:
            enabled: true
            patch:
              enabled: true
          ingressClassResource:
            default: true
          extraArgs:
            publish-status-address: {{ local_ip }}
            election-id: ingress-nginx-leader
            controller-class: k8s.io/ingress-nginx
            ingress-class: nginx
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          containerPort:
            http: 80
            https: 443
          config:
            proxy-body-size: "0"
            use-forwarded-headers: "true"
        tcp:
          {% for service in services if service.enabled %}
          {% for port in service.ports %}
          "{{ port }}": {{ service.namespace | default(service.name) }}/{{ service.name }}:{{ service_ports[service.name] }}
          {% endfor %}
          {% endfor %}

  # Registry
  - name: registry
    namespace: registry
    chart: bjw-s/app-template
    version: {{ app_template_version }}
    needs:
      - ingress-nginx/ingress-nginx
    values:
      - controllers:
          registry:
            type: statefulset
            containers:
              app:
                image:
                  repository: registry
                  tag: {{ registry_version }}
        service:
          app:
            controller: registry
            ports:
              http:
                port: 5000
        ingress:
          app:
            className: nginx
            annotations:
              cert-manager.io/cluster-issuer: "mkcert-issuer"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              kubernetes.io/ingress.allow-http: "false"
              nginx.ingress.kubernetes.io/proxy-body-size: "4096m"
            hosts:
              - host: {{ registry_name }}.{{ local_domain }}
                paths:
                  - path: /
                    service:
                      identifier: app
                      port: http
            tls:
              - secretName: registry-tls
                hosts:
                  - {{ registry_name }}.{{ local_domain }}
        persistence:
          data:
            enabled: true
            size: {{ registry.storage.size }}
            retain: true
            type: persistentVolumeClaim
            accessMode: ReadWriteOnce
            globalMounts:
              - path: /var/lib/registry
        env:
          REGISTRY_HTTP_ADDR: ":5000"
          REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry

  # Service releases
  {% for service in services if service.enabled %}
  - name: {{ service.name }}
    namespace: {{ service.namespace | default(service.name) }}
    chart: {{ service.config.chart }}
    version: {{ service.config.version }}
    needs:
      # ensure ingress-nginx and registry are installed before installing {{ service.name }}
      - ingress-nginx/ingress-nginx
      - registry/registry
    values:
      - # Base configuration
        {{ service.base_values | to_yaml | indent(8) }}
      {% if service.custom_values %}
      - # Custom configuration
        {{ service.custom_values | to_yaml | indent(8) }}
      {% endif %}
  {% endfor %} 