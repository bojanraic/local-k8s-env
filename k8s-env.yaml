environment:
  # General settings
  name: dev-me # name of the environment; drives the naming of kubernetes cluster and nodes, host containers etc
  base-dir: ${PWD}/.local # where kubernetes logs/storage, and various config files are stored
  expand-base-dir-vars: true # set to false if you use absolute path for base-dir; true if you use relative/expanded path

  # At the moment, KinD on macOS has been tested, with a docker-compatible runtime
  # Podman has been tried out but it is not a first-class citizen with KinD so it is not supported as of yet
  # Linux has not been tested yet
  provider:
    name: kind # provider for kubernetes clusters, must be kind for now
    runtime: docker # docker or podman for container runtime

  kubernetes:
    api-port: 6443 # port for the API server, will be exposed to the host machine as local-ip:api-port
    image: kindest/node # image for the kind nodes
    # renovate: datasource=docker depName=kindest/node versioning=docker
    tag: v1.32.2  # tag for the kind image

  nodes: # common settings for all kubernetes nodes
    servers: 1 # number of control-plane servers/masters
    workers: 1 # number of worker nodes
    allow-scheduling-on-control-plane: true # whether to allow scheduling on control plane nodes even when workers exist

  local-ip: 192.168.1.100 # local ip, mapping to the host IP to use for DNS resolution and wildcard certificates
  local-domain: dev.me # a domain name to use for custom dns resolution and wildcard certificates 
  local-lb-ports: # list of ports to expose on the load balancer side, mapping to the host machine
    - 80 # http port for nginx ingress controller
    - 443 # https port for nginx ingress controller

  registry:
    name: cr # name, to be used in the final url for the registry, i.e. <registry.name>.<local-domain>
    storage: # use PVC for storage
      size: 15Gi # size of PVC  

  internal-components:
    # renovate: datasource=helm depName=app-template repoUrl=https://bjw-s.github.io/helm-charts/ versioning=helm
    - app-template: "3.7.1"
    # renovate: datasource=helm depName=ingress-nginx repoUrl=https://kubernetes.github.io/ingress-nginx versioning=helm
    - nginx-ingress: "4.12.0"
    # renovate: datasource=docker depName=registry versioning=docker
    - registry: "2"
    # renovate: datasource=docker depName=dockurr/dnsmasq versioning=docker
    - dnsmasq: "2.90"

  use-service-presets: true # whether or not to use the preset values for services; leave true unless you have a good reason to override the defaults
  services: # additional services to deploy within the cluster 
    - name: mysql
      enabled: false # whether or not to install this component and expose the port(s)
      ports:
        - 3306 # port to expose on the host machine
      storage: # use PVC for storage
        size: 10Gi # size of PVC
      config:
        chart: bitnami/mysql # the chart to use
        # renovate: datasource=helm depName=mysql
        version: 12.3.0
        values: # additional values to use for the chart
          auth:
            createDatabase: false # whether or not to create a database

    - name: postgres
      enabled: true # whether or not to install this component and expose the port(s)
      ports:
        - 5432
      storage: # use PVC for storage
        size: 5Gi
      config:
        chart: bitnami/postgresql # the chart to use
        # renovate: datasource=helm depName=postgresql
        version: 16.4.14

    - name: mongodb
      enabled: false # whether or not to install this component and expose the port(s)
      ports:
        - 27017 # port to expose on the host machine
      storage: # use PVC for storage
        size: 5Gi # size of PVC
      config:
        chart: bitnami/mongodb # the chart to use
        # renovate: datasource=helm depName=mongodb
        version: 16.4.5

    - name: rabbitmq
      enabled: false # whether or not to install this component and expose the port(s)
      ports:
        - 5672 # port to expose on the host machine
      storage: # use PVC for storage
        size: 2Gi # size of PVC
      config:
        chart: bitnami/rabbitmq # the chart to use
        # renovate: datasource=helm depName=rabbitmq
        version: 15.3.2

    - name: dragonfly
      enabled: false # whether or not to install this component and expose the port(s)
      ports:
        - 6379
      storage:
        size: 1Gi
      config:
        chart: oci://ghcr.io/dragonflydb/dragonfly/helm/dragonfly # the chart to use
        # renovate: datasource=docker depName=dragonflydb/dragonfly
        version: v1.27.1
        values: # additional values to use for the chart
          image:
            repository: ghcr.io/dragonflydb/dragonfly # the image to use
